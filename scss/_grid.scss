/*
* Amazium (http://www.amazium.co.uk)
* Copyright 2010 - 2016, Mike Ballan
* Licensed under MIT (https://github.com/OwlyStuff/Amazium/blob/master/LICENSE)
*/

/***********************************************
GRID SETTINGS
***********************************************/

/***** Define grid width *****/
$grid-width: 1200px;
$grid-width-smscreen: 960px;
$grid-width-tablet: 768px;

/***** Define column number *****/
$grid-columns: 12;

/***** Define gutter spacing *****/
$grid-gutter: 20px;

/***** Calculate gutter spacing for breakpoints / can also be set manually *****/
$grid-gutter-smscreen: $grid-gutter / 1.25;
$grid-gutter-tablet: $grid-gutter-smscreen / 1.1;

/***** Shorthand Padding Mixin *****/
@mixin padding($padding) { padding: $padding; }

/***********************************************
Desktop
***********************************************/

/***** Sets row widths *****/
.row                                            { margin:0 auto; width:$grid-width; display:flex; box-sizing:border-box; flex:0 1 auto; flex-direction:row; flex-wrap:wrap; }
.row .row,
.row--width-fluid                               { width:100%; }

/***** Row alignments *****/
.row--align-left                                { justify-content:flex-start; }
.row--align-center                              { justify-content:center; }
.row--align-right                               { justify-content:flex-end; }
.row--order-reverse                             { flex-direction:row-reverse; }

/***** Grid setup *****/
%grid-styles                                    { @include padding(0 $grid-gutter); box-sizing:border-box; }
.grid                                           { @extend %grid-styles;flex:1 1 0%; }

@for $i from 1 through $grid-columns {
    .grid-#{$i}                                 { max-width: 100% / $grid-columns *$i; @extend %grid-styles; }
}

/***** grid ordering *****/
.grid--order-first                              { order:-1; }
.grid--order-last                               { order:1; }

/***** Sets grid offsets *****/
@for $i from 1 through $grid-columns - 1 {
    .grid--offset-#{$i}                         { margin-left: 100% / $grid-columns *$i; }
}

/***** Show & Hide classes *****/
.show-mobile                                    { display:none !important; }
.show-tablet                                    { display:none !important; }
.show-screen                                    { display:inherit; }

.hide-mobile                                    { display:inherit !important; }
.hide-tablet                                    { display:inherit !important; }
.hide-screen                                    { display:none !important; }

/***********************************************
Small Screen (Smaller than Desktop)
***********************************************/
@media only screen and (min-width: $grid-width-smscreen) and (max-width: $grid-width - 1px) {

/***** Sets row widths *****/
.row                                            { width:$grid-width-smscreen; }
.row--width-fluid                               { width:100%; }

/***** Grid setup *****/
%grid-styles-smscreen                           { @include padding(0 $grid-gutter-smscreen); }
.grid                                           { @extend %grid-styles-smscreen; }

@for $i from 1 through $grid-columns {
    .grid-#{$i}                                 { @extend %grid-styles-smscreen; }
}

/***** Show & Hide classes *****/
.show-mobile                                    { display:none !important; }
.show-tablet                                    { display:none !important; }
.show-screen                                    { display:inherit !important; }

.hide-mobile                                    { display:inherit !important; }
.hide-tablet                                    { display:inherit !important; }
.hide-screen                                    { display:none !important; }

}

/***********************************************
Tablet (Smaller than Small Screen)
***********************************************/
@media only screen and (min-width: $grid-width-tablet) and (max-width: $grid-width-smscreen - 1px) {

/***** Sets row widths *****/
.row                                            { width:$grid-width-tablet; }
.row--width-fluid                               { width:100%; }

/***** Grid setup tablet *****/
%grid-styles-tablet                             { @include padding(0 $grid-gutter-tablet); }
.grid                                           { @extend %grid-styles-tablet; }

@for $i from 1 through $grid-columns {
    .grid-#{$i}-tablet                          { padding:0 $grid-gutter-tablet; flex-grow: $i; max-width: $i / $grid-columns * 100%; }
}

/***** grid ordering *****/
.grid--order-first-tablet                       { order:inherit; }
.grid--order-last-tablet                        { order:inherit; }

/***** Show & Hide classes *****/
.show-mobile                                    { display:none !important; }
.show-tablet                                    { display:inherit !important; }
.show-screen                                    { display:none !important; }

.hide-mobile                                    { display:inherit !important; }
.hide-tablet                                    { display:none !important; }
.hide-screen                                    { display:inherit !important; }

}

/***********************************************
Mobile (Smaller than Tablet)
***********************************************/
@media only screen and (max-width: $grid-width-tablet - 1px) {

/***** Sets row widths *****/
.row, .row--width-fluid                         { padding:0 $grid-gutter; width:100%; }
.row--order-reverse                             { flex-direction:column-reverse; }

/***** Grid setup mobile*****/
%grid-styles-mobile                             { padding:0; flex-basis:100%; max-width:100%; }
.grid                                           { @extend %grid-styles-mobile; }

@for $i from 1 through $grid-columns {
    .grid-#{$i}                                 { flex-grow: $i; max-width: 100% / $i; @extend %grid-styles-mobile; }
}

/***** grid ordering *****/
.grid--order-first-mobile                       { order:inherit; }
.grid--order-last-mobile                        { order:inherit; }

/***** Sets grid offsets *****/
%grid-offset-mobile                             { margin:0; }

@for $i from 1 to $grid-columns - 1 {
    .grid--offset-#{$i}                         { @extend %grid-offset-mobile; }
}

/***** Sets mobile override grid width *****/
@for $i from 1 through $grid-columns {
	.grid-#{$i}-mobile                          { flex-grow:$i; max-width:  $i / $grid-columns * 100%; }
}

/***** Show & Hide classes *****/
.show-mobile                                    { display:inline-block !important; }
.show-tablet                                    { display:none !important; }
.show-screen                                    { display:none !important; }

.hide-mobile                                    { display:none !important; }
.hide-tablet                                    { display:inline-block !important; }
.hide-screen                                    { display:inline-block !important; }

}